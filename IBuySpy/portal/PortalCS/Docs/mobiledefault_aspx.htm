<html><head><link rel=stylesheet href=style.css></head><body><div class=SourcePanel style='font-size:12'><pre style='background-color:white'>
&lt%@ Page Language="C#" Inherits="System.Web.UI.MobileControls.MobilePage" %<font color= "blue">&gt</font>
&lt%@ Register TagPrefix="mobile" Namespace="System.Web.UI.MobileControls" Assembly="System.Web.Mobile" %<font color= "blue">&gt</font>
&lt%@ Register TagPrefix="portal" Namespace="ASPNetPortal.MobileControls" Assembly="Portal" %<font color= "blue">&gt</font>
&lt%@ Import Namespace="System.Data" %<font color= "blue">&gt</font>
&lt%@ Import Namespace="System.Data.SqlClient" %<font color= "blue">&gt</font>
&lt%@ Import Namespace="ASPNetPortal" %<font color= "blue">&gt</font>
<font color= "green">&lt%--

    The MobileDefault.aspx page is used to load and populate each Mobile Portal View.  It accomplishes
    this by reading the layout configuration of the portal from the Portal Configuration
    system. At the top level is a tab view, implemented using a TabbedPanel custom control.
    Each portal view is inserted into this control, and portal modules (each implemented
    as an ASP.NET user control) are instantiated and inserted into tabs.

--%<font color= "blue">&gt</font></font>
<font color= "blue">&lt</font><font color="maroon">script</font> runat="server"<font color= "blue">&gt</font>
<font color= "blue"></font>
<font color= "blue">    </font>ArrayList authorizedTabs = new ArrayList();
<font color= "blue"></font>
<font color= "green">    //*********************************************************************</font>
<font color= "green">    //</font>
<font color= "green">    // Page_Init Event Handler</font>
<font color= "green">    //</font>
<font color= "green">    // The Page_Init event handler executes at the very beginning of each page</font>
<font color= "green">    // request (immediately before Page_Load).</font>
<font color= "green">    //</font>
<font color= "green">    // The Page_Init event handler calls the PopulateTabs utility method</font>
<font color= "green">    // to insert empty tabs into the tab view. It then determines the tab</font>
<font color= "green">    // index of the currently requested portal, and then calls the</font>
<font color= "green">    // PopulateTabView utility method to dynamically populate the</font>
<font color= "green">    // active portal view.</font>
<font color= "green">    //</font>
<font color= "green">    //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    void</font> Page_Init(Object sender, EventArgs e) {
<font color= "blue"></font>
<font color= "blue">        </font>int tabIndex = 0;
<font color= "blue">        </font>int tabID = 0;
<font color= "blue"></font>
<font color= "green">        // Obtain current tab index and tab id settings</font>
<font color= "blue">        </font>String tabSetting = (String)HiddenVariables["ti"];
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        if </font>(tabSetting != null) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">            </font>int comma = tabSetting.IndexOf(',');
<font color= "blue">            </font>tabIndex = Int32.Parse(tabSetting.Substring(0, comma));
<font color= "blue">            </font>tabID = Int32.Parse(tabSetting.Substring(comma + 1));
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        // Obtain PortalSettings from Current Context</font>
<font color= "blue">        </font>LoadPortalSettings(tabIndex, tabID);
<font color= "blue"></font>
<font color= "green">        // Populate tab list with empty tabs</font>
<font color= "blue">        </font>PopulateTabStrip();
<font color= "blue"></font>
<font color= "green">        // Populate the current tab view</font>
<font color= "blue">        </font>PopulateTabView(tabIndex);
<font color= "blue">    </font>}
<font color= "blue"></font>
<font color= "green">    //*********************************************************************</font>
<font color= "green">    //</font>
<font color= "green">    // PopulateTabStrip method</font>
<font color= "green">    //</font>
<font color= "green">    // The PopulateTabStrip method is used to dynamically create and add</font>
<font color= "green">    // tabs for each tab view defined in the portal configuration.</font>
<font color= "green">    //</font>
<font color= "green">    //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    void</font> PopulateTabStrip() {
<font color= "blue"></font>
<font color= "green">        // Obtain PortalSettings from Current Context</font>
<font color= "blue">        </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "blue">        for</font> (int i=0;i < portalSettings.MobileTabs.Count; i++) {
<font color= "blue"></font>
<font color= "green">            // Create a MobilePortalTab control for the tab,</font>
<font color= "green">            // and add it to the tab view.</font>
<font color= "blue"></font>
<font color= "blue">            </font>TabStripDetails tab = (TabStripDetails)portalSettings.MobileTabs[i];
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">            if </font>(PortalSecurity.IsInRoles(tab.AuthorizedRoles)) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                </font>MobilePortalTab tabPanel = new MobilePortalTab();
<font color= "blue">                </font>tabPanel.Title = tab.TabName;
<font color= "blue"></font>
<font color= "blue">                </font>TabView.Panes.Add(tabPanel);
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue">    </font>}
<font color= "blue"></font>
<font color= "green">    //*********************************************************************</font>
<font color= "green">    //</font>
<font color= "green">    // PopulateTabView method</font>
<font color= "green">    //</font>
<font color= "green">    // The PopulateTabView method dynamically populates a portal tab</font>
<font color= "green">    // with each module defined in the portal configuration.</font>
<font color= "green">    //</font>
<font color= "green">    //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    void</font> PopulateTabView(int tabIndex) {
<font color= "blue"></font>
<font color= "green">        // Obtain PortalSettings from Current Context</font>
<font color= "blue">        </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "green">        // Ensure that the visiting user has access to the current page</font>
<font color= "blue"></font><font color= "blue">        if </font>(PortalSecurity.IsInRoles(portalSettings.ActiveTab.AuthorizedRoles) == false) {<font color= "blue"></font>
<font color= "blue">            </font>Response.Redirect("~/Admin/MobileAccessDenied.aspx");
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        // Obtain reference to container mobile tab</font>
<font color= "blue">        </font>MobilePortalTab view = (MobilePortalTab) TabView.Panes[tabIndex];
<font color= "blue"></font>
<font color= "green">        // Dynamically populate the view</font>
<font color= "blue"></font><font color= "blue">        if </font>(portalSettings.ActiveTab.Modules.Count > 0) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "green">            // Loop through each entry in the configuration system for this tab</font>
<font color= "blue">            </font>foreach (ModuleSettings moduleSettings in portalSettings.ActiveTab.Modules) {
<font color= "blue"></font>
<font color= "green">                // Only add the module if it support Mobile devices</font>
<font color= "blue"></font><font color= "blue">                if </font>(moduleSettings.ShowMobile) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">                    </font>MobilePortalModuleControl moduleControl = (MobilePortalModuleControl) Page.LoadControl(moduleSettings.MobileSrc);
<font color= "blue">                    </font>moduleControl.ModuleConfiguration = moduleSettings;
<font color= "blue"></font>
<font color= "blue">                    </font>view.Panes.Add(moduleControl);
<font color= "blue">                </font>}
<font color= "blue">            </font>}
<font color= "blue">        </font>}
<font color= "blue">    </font>}
<font color= "blue"></font>
<font color= "green">    //*********************************************************************</font>
<font color= "green">    //</font>
<font color= "green">    // TabView_OnActivate Event Handler</font>
<font color= "green">    //</font>
<font color= "green">    // The TabView_OnActivate event handler executes when the user switches</font>
<font color= "green">    // tabs in the tab view. It calls the PopulateTabView utility</font>
<font color= "green">    // method to dynamically populate the newly activated view.</font>
<font color= "green">    //</font>
<font color= "green">    //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    void</font> TabView_OnTabActivate(Object sender, EventArgs e) {
<font color= "blue"></font>
<font color= "green">        // Obtain PortalSettings from Current Context</font>
<font color= "blue">        </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "blue">        </font>int tabIndex = TabView.ActivePaneIndex;
<font color= "blue">        </font>int tabID = ((TabStripDetails) portalSettings.MobileTabs[tabIndex]).TabId;
<font color= "blue"></font>
<font color= "green">        // Store tabindex in a hidden variable to preserve accross round trips</font>
<font color= "blue"></font><font color= "blue">        if </font>(tabIndex != 0) {<font color= "blue"></font>
<font color= "blue">            </font>HiddenVariables["ti"] = String.Concat(tabIndex.ToString(), ",", tabID.ToString());
<font color= "blue">        </font>}
<font color= "blue"></font><font color= "blue">        else </font>{<font color= "blue"></font>
<font color= "blue">            </font>HiddenVariables.Remove("ti");
<font color= "blue">        </font>}
<font color= "blue"></font>
<font color= "green">        // Check to see if portal settings need reloading</font>
<font color= "blue">        </font>LoadPortalSettings(tabIndex, tabID);
<font color= "blue"></font>
<font color= "green">        // Populate the newly active tab.</font>
<font color= "blue">        </font>PopulateTabView(tabIndex);
<font color= "blue"></font>
<font color= "green">        // Set the view to summary mode, where a summary of all the modules are shown.</font>
<font color= "blue">        </font>((MobilePortalTab)TabView.ActivePane).SummaryView = true;
<font color= "blue">    </font>}
<font color= "blue"></font>
<font color= "green">    //*********************************************************************</font>
<font color= "green">    //</font>
<font color= "green">    // LoadPortalSettings method</font>
<font color= "green">    //</font>
<font color= "green">    // LoadPortalSettings is a helper methods that loads portal settings for</font>
<font color= "green">    // the selected tab.  It first verifies that the settings haven't already</font>
<font color= "green">    // been set within the Global.asax file -- if they are different (in the</font>
<font color= "green">    // case that a tab change is made) then the method reloads the appropriate</font>
<font color= "green">    // tab data.</font>
<font color= "green">    //</font>
<font color= "green">    //*********************************************************************</font>
<font color= "blue"></font>
<font color= "blue">    void</font> LoadPortalSettings(int tabIndex, int tabId) {
<font color= "blue"></font>
<font color= "green">        // Obtain PortalSettings from Current Context</font>
<font color= "blue">        </font>PortalSettings portalSettings = (PortalSettings) HttpContext.Current.Items["PortalSettings"];
<font color= "blue"></font>
<font color= "blue"></font><font color= "blue">        if </font>((portalSettings.ActiveTab.TabId != tabId) || (portalSettings.ActiveTab.TabIndex != tabIndex)) {<font color= "blue"></font>
<font color= "blue"></font>
<font color= "blue">            </font>HttpContext.Current.Items["PortalSettings"] = new PortalSettings(tabIndex, tabId);
<font color= "blue">        </font>}
<font color= "blue">    </font>}
<font color= "blue"></font>
<font color= "blue">&lt/</font><font color="maroon">script</font><font color= "blue">&gt</font>
<font color= "blue">&lt</font>mobile:Form runat="server" Wrapping="NoWrap" Paginate="true" PagerStyle-Font-Name="Verdana" PagerStyle-ForeColor="#ffffff" PagerStyle-Font-Size="Small"<font color= "blue">&gt</font>
    <font color= "blue">&lt</font><font color="maroon">DeviceSpecific</font><font color= "blue">&gt</font>
        <font color= "blue">&lt</font><font color="maroon">Choice</font> Filter="isJScript" BackColor="#000000"<font color= "blue">&gt</font>
            <font color= "blue">&lt</font><font color="maroon">HeaderTemplate</font><font color= "blue">&gt</font>
                <font color= "blue">&lt</font><font color="maroon">table</font> width="100%" cellspacing="0" cellpadding="0" border="0"<font color= "blue">&gt</font>
                    <font color= "blue">&lt</font><font color="maroon">tr</font><font color= "blue">&gt</font>
                        <font color= "blue">&lt</font><font color="maroon">td</font><font color= "blue">&gt</font>
                            <font color= "blue">&lt</font><font color="maroon">img</font> src="data/mobilelogo.gif" width="180" height="45"<font color= "blue">&gt</font>
                        <font color= "blue">&lt/</font><font color="maroon">td</font><font color= "blue">&gt</font>
                    <font color= "blue">&lt/</font><font color="maroon">tr</font><font color= "blue">&gt</font>
                <font color= "blue">&lt/</font><font color="maroon">table</font><font color= "blue">&gt</font>
                <font color= "blue">&lt</font><font color="maroon">table</font> width="100%" height="270" cellspacing="0" cellpadding="0" border="0" bgcolor="#ffffff"<font color= "blue">&gt</font>
                    <font color= "blue">&lt</font><font color="maroon">tr</font><font color= "blue">&gt</font>
                        <font color= "blue">&lt</font><font color="maroon">td</font><font color= "blue">&gt</font>
                            <font color= "blue">&lt</font><font color="maroon">img</font> src="images/spacer.gif" width="2" height="220"<font color= "blue">&gt</font>
                        <font color= "blue">&lt/</font><font color="maroon">td</font><font color= "blue">&gt</font>
                        <font color= "blue">&lt</font><font color="maroon">td</font> valign="top"<font color= "blue">&gt</font>
            <font color= "blue">&lt/</font><font color="maroon">HeaderTemplate</font><font color= "blue">&gt</font>
            <font color= "blue">&lt</font><font color="maroon">FooterTemplate</font><font color= "blue">&gt</font>
                <font color= "blue">&lt/</font><font color="maroon">td</font><font color= "blue">&gt</font>
                <font color= "blue">&lt</font><font color="maroon">td</font><font color= "blue">&gt</font>
                    <font color= "blue">&lt</font><font color="maroon">img</font> src="images/spacer.gif" width="2" height="220"<font color= "blue">&gt</font>
                <font color= "blue">&lt/</font><font color="maroon">td</font><font color= "blue">&gt</font>
                <font color= "blue">&lt/</font><font color="maroon">tr</font><font color= "blue">&gt</font><font color= "blue">&lt/</font><font color="maroon">table</font><font color= "blue">&gt</font>
            <font color= "blue">&lt/</font><font color="maroon">FooterTemplate</font><font color= "blue">&gt</font>
        <font color= "blue">&lt/</font><font color="maroon">Choice</font><font color= "blue">&gt</font>
        <font color= "blue">&lt</font><font color="maroon">Choice</font><font color= "blue">&gt</font>
            <font color= "blue">&lt</font><font color="maroon">HeaderTemplate</font><font color= "blue">&gt</font>
                <font color= "blue">&lt</font>mobile:Label StyleReference="title" runat="server"<font color= "blue">&gt</font>
                    IBuySpy Portal<font color= "blue">&lt/</font>mobile:Label<font color= "blue">&gt</font>
            <font color= "blue">&lt/</font><font color="maroon">HeaderTemplate</font><font color= "blue">&gt</font>
        <font color= "blue">&lt/</font><font color="maroon">Choice</font><font color= "blue">&gt</font>
    <font color= "blue">&lt/</font><font color="maroon">DeviceSpecific</font><font color= "blue">&gt</font>
    <font color= "blue">&lt</font><font color=blue>portal:TabbedPanel id="TabView" runat="server" OnTabActivate="TabView_OnTabActivate" TabColor="#bbbb9a" TabTextColor="#000000" ActiveTabColor="#000000" ActiveTabTextColor="#ffffff" /</font><font color= "blue">&gt</font>
<font color= "blue">&lt/</font>mobile:Form<font color= "blue">&gt</font>
</pre>